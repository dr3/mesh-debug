schema {
  query: Query
}

directive @oneOf on OBJECT | INTERFACE

directive @statusCodeTypeName(typeName: String, statusCode: ID) repeatable on UNION

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: v1_HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "Employees_V1", endpoint: "http://localhost:8801") {
  v1_pet(
    "ID of pet to return"
    id: String!
  ): v1_pet_by_petId_response @httpOperation(path: "/pet/{args.petId}", operationSpecificHeaders: "{\"accept\":\"application/json\"}", httpMethod: GET)
}

union v1_pet_by_petId_response @statusCodeTypeName(statusCode: 200, typeName: "Pet") @statusCodeTypeName(statusCode: 404, typeName: "PetNotFoundError") @statusCodeTypeName(statusCode: 500, typeName: "ServerError") = v1_Pet | v1_PetNotFoundError | v1_ServerError

type v1_Pet {
  id: String!
  name: String!
  type: String!
}

type v1_PetNotFoundError {
  error: String!
}

type v1_ServerError {
  error: String!
  severity: String!
}

scalar ObjMap

enum v1_HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}