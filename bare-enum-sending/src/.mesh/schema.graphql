schema {
  query: Query
  mutation: Mutation
}

directive @oneOf on OBJECT | INTERFACE

directive @enum(value: String) on ENUM_VALUE

directive @statusCodeTypeName(typeName: String, statusCode: ID) repeatable on UNION

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HttpMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "Pets_V1", endpoint: "http://localhost:8801") {
  dummy: String
}

type Mutation {
  postPet(input: PetInput): PostPetResponse @httpOperation(path: "/pet", operationSpecificHeaders: "{\"Content-Type\":\"application/json\",\"accept\":\"application/json\"}", httpMethod: POST)
}

union PostPetResponse @statusCodeTypeName(statusCode: 200, typeName: "Pet") @statusCodeTypeName(statusCode: 400, typeName: "BadRequestError") @statusCodeTypeName(statusCode: 500, typeName: "ServerError") = Pet | BadRequestError | ServerError

type Pet {
  id: String!
  name: String!
  type: PetType!
  debug: String
}

enum PetType {
  FLUFFYBOI
  EVILCAT
  DUCK
}

type BadRequestError {
  error: String!
}

type ServerError {
  error: String!
  severity: String!
}

input PetInput {
  id: String!
  name: String!
  type: PetType!
  debug: String
}

scalar ObjMap

enum HttpMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}